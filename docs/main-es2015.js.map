{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/cmps/bit-transfer/bit-transfer.component.ts","./src/app/cmps/bit-transfer/bit-transfer.component.html","./src/app/cmps/chart/chart.component.ts","./src/app/cmps/chart/chart.component.html","./src/app/cmps/contact-list/contact-list.component.ts","./src/app/cmps/contact-list/contact-list.component.html","./src/app/cmps/contact-preview/contact-preview.component.ts","./src/app/cmps/contact-preview/contact-preview.component.html","./src/app/cmps/filter/filter.component.ts","./src/app/cmps/filter/filter.component.html","./src/app/cmps/nav-bar/nav-bar.component.ts","./src/app/cmps/nav-bar/nav-bar.component.html","./src/app/cmps/transaction-preview/transaction-preview.component.ts","./src/app/cmps/transaction-preview/transaction-preview.component.html","./src/app/cmps/transactions-list/transactions-list.component.ts","./src/app/cmps/transactions-list/transactions-list.component.html","./src/app/directives/forbidden-name.directive.ts","./src/app/models/chart.model.ts","./src/app/models/contact.model.ts","./src/app/pages/contact-details/contact-details.component.ts","./src/app/pages/contact-details/contact-details.component.html","./src/app/pages/contact-edit/contact-edit.component.ts","./src/app/pages/contact-edit/contact-edit.component.html","./src/app/pages/contact-page/contact-page.component.ts","./src/app/pages/contact-page/contact-page.component.html","./src/app/pages/home-page/home-page.component.ts","./src/app/pages/home-page/home-page.component.html","./src/app/pages/signup-page/signup-page.component.ts","./src/app/pages/signup-page/signup-page.component.html","./src/app/pages/statistics-page/statistics-page.component.ts","./src/app/pages/statistics-page/statistics-page.component.html","./src/app/services/auth-guard-service/auth-guard-service.service.ts","./src/app/services/bitcoin-service/bitcoin-service.service.ts","./src/app/services/chart-service/chart-service.service.ts","./src/app/services/contact-service/contact-service.ts","./src/app/services/mock/contacts.js","./src/app/services/storage-service/storage-service.service.ts","./src/app/services/user-service/user-service.service.ts","./src/app/services/utils-service/utils-sercice.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\n\r\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component'\r\nimport { HomePageComponent } from './pages/home-page/home-page.component'\r\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component'\r\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component'\r\nimport { StatisticsPageComponent } from './pages/statistics-page/statistics-page.component'\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { AuthGuardService } from './services/auth-guard-service/auth-guard-service.service';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'signup', component: SignupPageComponent },\r\n  { path: 'contact', component: ContactPageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/edit/:id', component: ContactEditComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/edit', component: ContactEditComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/:id', component: ContactDetailsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'statistics', component: StatisticsPageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'home', component: HomePageComponent, canActivate: [AuthGuardService] },\r\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'mister-bitcoin';\r\n}\r\n","<contact-nav-bar></contact-nav-bar>\r\n\r\n<!-- everything below this section is dependant on the routing! -->\r\n<main>\r\n    <router-outlet></router-outlet>\r\n</main>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NavBarComponent } from './cmps/nav-bar/nav-bar.component'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { ContactPreviewComponent } from './cmps/contact-preview/contact-preview.component';\r\nimport { ContactListComponent } from './cmps/contact-list/contact-list.component';\r\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\r\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component';\r\nimport { StatisticsPageComponent } from './pages/statistics-page/statistics-page.component'\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { ChartComponent } from './cmps/chart/chart.component';\r\nimport { FilterComponent } from './cmps/filter/filter.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { BitTransferComponent } from './cmps/bit-transfer/bit-transfer.component';\r\nimport { TransactionsListComponent } from './cmps/transactions-list/transactions-list.component';\r\nimport { TransactionPreviewComponent } from './cmps/transaction-preview/transaction-preview.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ForbiddenValidatorDirective } from './directives/forbidden-name.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    ContactPageComponent,\r\n    HomePageComponent,\r\n    ContactPreviewComponent,\r\n    ContactListComponent,\r\n    ContactDetailsComponent,\r\n    ContactEditComponent,\r\n    StatisticsPageComponent,\r\n    ChartComponent,\r\n    FilterComponent,\r\n    SignupPageComponent,\r\n    BitTransferComponent,\r\n    TransactionsListComponent,\r\n    TransactionPreviewComponent,\r\n    ForbiddenValidatorDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleChartsModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'bit-transfer',\r\n  templateUrl: './bit-transfer.component.html',\r\n  styleUrls: ['./bit-transfer.component.scss']\r\n})\r\nexport class BitTransferComponent implements OnInit {\r\n\r\n  @Input() contact: ContactModel\r\n  @Input() userCoins: number\r\n  amount: number\r\n  bitTransferForm: FormGroup;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    debugger\r\n    this.bitTransferForm = new FormGroup({\r\n      'amount': new FormControl('', [\r\n      ], [this.userDoesntHaveEnoughMoney]),\r\n    }, { validators: [], asyncValidators: [] });\r\n  }\r\n\r\n  onSubmit(value) {\r\n    debugger\r\n    this.userService.addMove(this.contact, this.amount)\r\n    //do not enable any transfer if user doesn't have enough money!\r\n    //make it appear with validation!\r\n  }\r\n\r\n  userDoesntHaveEnoughMoney(control: FormControl): Observable<ValidationErrors | null> {\r\n    debugger\r\n    //check if the current user has enough money and return a new observable with the answer\r\n    return new Observable((observable) => {\r\n      if ((this.userCoins - this.amount > 0) && (this.amount > 0)) {\r\n        observable.next({ 'amount': true })\r\n      } else {\r\n        observable.next(null)\r\n      }\r\n    })\r\n  }\r\n}","<div class=\"transaction-cmp-container\">\r\n    <p class=\"transaction-contact\">Transfer Bit to {{contact.name}}</p>\r\n    <div class=\"transaction-form-container\">\r\n        <form class=\"transfer-form\" (ngSubmit)=\"onSubmit(bitTransferForm.value)\" [formGroup]=\"bitTransferForm\">\r\n            <label for=\"amount\">Amount:</label>\r\n            <input type=\"number\" name=\"amount\" formControlName=\"amount\" [(ngModel)]=\"amount\">\r\n        </form>\r\n        <button class=\"btn\" (click)=\"onSubmit(bitTransferForm.value)\">Transfer</button>\r\n    </div>\r\n    <div *ngIf=\"bitTransferForm.get('amount').invalid && (bitTransferForm.get('amount').dirty || bitTransferForm.get('amount').touched)\"\r\n    class=\"alert alert-danger\">\r\n    <div *ngIf=\"bitTransferForm.get('amount').errors.userDoesntHaveEnoughMoney\">\r\n        Not enough money!\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<!-- <div class=\"signup-form-and-button\">\r\n    <form class=\"signup-form\" [formGroup]=\"userNameForm\" (ngSubmit)=\"onSubmit(userNameForm.value)\">\r\n        <input type=\"text\" class=\"form__field\" placeholder=\"Name\" formControlName=\"name\" name=\"signup\" required\r\n            minlength=\"2\">\r\n        <label for=\"name\" class=\"form__label\">Name</label>\r\n    </form>\r\n    <button class=\"btn\" (click)=\"onSubmit(userNameForm.value)\">Signup</button>\r\n</div>\r\n<div *ngIf=\"userNameForm.get('name').invalid && (userNameForm.get('name').dirty || userNameForm.get('name').touched)\"\r\n    class=\"alert alert-danger\">\r\n    <div *ngIf=\"userNameForm.get('name').errors.required\">\r\n        Name is required.\r\n    </div>\r\n    <div *ngIf=\"userNameForm.get('name').errors.minlength\">\r\n        Name must be at least 2 characters long.\r\n    </div>\r\n    <div *ngIf=\"userNameForm.get('name').errors.forbiddenName\">\r\n        Forbidden name entered!\r\n    </div>\r\n</div>\r\n</div> -->","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport ChartModel from 'src/app/models/chart.model';\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss']\r\n})\r\nexport class ChartComponent implements OnInit, OnChanges {\r\n  @Input() chart: ChartModel;\r\n  myOptions: Object\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const newData = changes.chart.currentValue.data.map(item => {\r\n      return [item.x, item.y]\r\n    })\r\n    this.chart.data = newData\r\n    this.myOptions = {\r\n      //graph animation:\r\n      animation: {\r\n        duration: 1000,\r\n        easing: 'ease-int-out',\r\n        startup: true\r\n      },\r\n      width: 550,\r\n      height: 350,\r\n      colors: ['#ed4d6e'],\r\n      curveType: 'function',\r\n      backgroundColor: 'transparent',\r\n      // chartArea: { width: '65%'},\r\n      titleTextStyle: {\r\n        color: 'white',\r\n        fontSize: 16, \r\n        bold: false, \r\n        italic: false\r\n      },\r\n      hAxis: { textStyle: { color: 'white' } },\r\n      vAxis: { textStyle: { color: 'white' } },\r\n      legend: { textStyle: { color: 'white' } },\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<div>\r\n    <google-chart \r\n        [title]=\"chart.title\" \r\n        [type]=\"chart.type\" \r\n        [data]=\"chart.data\" \r\n        [columnNames]=\"chart.columnNames\"\r\n        [options]=\"myOptions\">\r\n    </google-chart>\r\n</div>","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-list',\r\n  templateUrl: './contact-list.component.html',\r\n  styleUrls: ['./contact-list.component.scss']\r\n})\r\nexport class ContactListComponent implements OnInit {\r\n\r\n  @Input() contacts: ContactModel[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p *ngFor=\"let contact of contacts\">\r\n    <contact-preview [contact]=\"contact\"></contact-preview>\r\n</p>","import { Component, OnInit, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'contact-preview',\r\n  templateUrl: './contact-preview.component.html',\r\n  styleUrls: ['./contact-preview.component.scss']\r\n})\r\nexport class ContactPreviewComponent implements OnInit {\r\n\r\n  @Input() contact: ContactModel;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  contactClick() {\r\n    this.router.navigate(['/contact' , this.contact._id])\r\n  }\r\n\r\n}\r\n","<div class=\"contact-preview-container\" (click)=\"contactClick()\">\r\n    {{contact.name}}\r\n    <img class=\"user-img\" src=\"https://res.cloudinary.com/due4sgv19/image/upload/v1582009348/bsal7g8oifemvty90xsu.png\">\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n  @Output() onFilter=new EventEmitter<string>()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onFilterChange(filterBy){\r\n    this.onFilter.emit(filterBy);\r\n  }\r\n\r\n}\r\n","<input class=\"search-contacts\" (keyup)=\"onFilterChange($event.target.value)\" placeholder=\"Search Contacts\">\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contact-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<header class=\"main-nav\">\r\n  <a exact class='main-nav-item' routerLink=\"/home\" routerLinkActive=\"selected\">\r\n    <img src='assets/icons/home2.png' alt=\"Home\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n  <a class='main-nav-item' routerLink=\"/contact\" routerLinkActive=\"selected\">\r\n    <img src=\"assets/icons/phone-book.png\" alt=\"Contacts\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n  <a class='main-nav-item' routerLink=\"/statistics\" routerLinkActive=\"selected\">\r\n    <img src=\"assets/icons/pie-chart (1).png\" alt=\"Statistics\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n</header>","import { Component, OnInit, Input } from '@angular/core';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'transaction-preview',\r\n  templateUrl: './transaction-preview.component.html',\r\n  styleUrls: ['./transaction-preview.component.scss']\r\n})\r\nexport class TransactionPreviewComponent implements OnInit {\r\n\r\n  @Input() move: TransactionModel\r\n  date\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.date = new Date(this.move.at).toLocaleDateString() + ' ' + new Date(this.move.at).toLocaleTimeString()\r\n  }\r\n\r\n}\r\n","<div class=\"transaction-preview\">\r\n    <p>To: {{move.to}}</p>\r\n    <p>At: {{date}}</p>\r\n    <p>Amount: {{move.amount}}</p>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'transactions-list',\r\n  templateUrl: './transactions-list.component.html',\r\n  styleUrls: ['./transactions-list.component.scss']\r\n})\r\nexport class TransactionsListComponent implements OnInit {\r\n\r\n  @Input() moves: TransactionModel[] = []\r\n  @Input() title: string = 'Your last 3 Transactions'\r\n  numOfTransactionToDisplay: number = 3\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.title !== 'Your last 3 Transactions') {\r\n      this.numOfTransactionToDisplay = this.moves.length\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"transaction-list-container\" *ngIf=\"moves.length>0\">\r\n    <div class=\"transaction-title-container\">\r\n        <p>{{title}}:</p>\r\n    </div>\r\n    <div class=\"transaction-preview-container\" *ngFor=\"let move of moves; let i = index\">\r\n        <transaction-preview *ngIf=\"i<numOfTransactionToDisplay\" [move]=\"move\"></transaction-preview>\r\n    </div>\r\n</div>","import { ValidatorFn, AbstractControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n/** A hero's name can't match the given regular expression */\r\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const forbidden = nameRe.test(control.value);\r\n    return forbidden ? { 'forbiddenName': { value: control.value } } : null;\r\n  };\r\n}\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[ForbiddenName]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: ForbiddenValidatorDirective, multi: true }]\r\n})\r\nexport class ForbiddenValidatorDirective implements Validator {\r\n  @Input('ForbiddenName') forbiddenName: string;\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    return this.forbiddenName ? forbiddenNameValidator(new RegExp(this.forbiddenName, 'i'))(control)\r\n      : null;\r\n  }\r\n}","export default class ChartModel {\r\n\r\n    constructor(public title: string, public type: string, public data: object, public columnNames: object) {\r\n\r\n    }\r\n\r\n    \r\n\r\n}","export default class ContactModel {\r\n    \r\n    public _id?= null;\r\n\r\n    constructor(public name: string, public email: string, public phone: string) {\r\n\r\n    }\r\n\r\n    public setId?() {\r\n        this._id = this._makeId();\r\n    }\r\n\r\n    private _makeId?(length = 10) {\r\n        let txt = ''\r\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n        for (let i = 0; i < length; i++) {\r\n            txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n        }\r\n        return txt\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactService } from '../../services/contact-service/contact-service';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'contact-details',\r\n  templateUrl: './contact-details.component.html',\r\n  styleUrls: ['./contact-details.component.scss']\r\n})\r\nexport class ContactDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  contact: ContactModel\r\n  user: UserModel\r\n  moves: TransactionModel[]\r\n  contactSubscriber: Subscription\r\n  userSubscriber: Subscription\r\n  title: string = 'Your recent transactions'\r\n\r\n  constructor(private route: ActivatedRoute, public contactService: ContactService, private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    //on every change on the id in the url - re-render the details page\r\n    this.route.paramMap.subscribe((params) => {\r\n      const id = params.get('id');\r\n      this.contactSubscriber = this.contactService.getContactById(id).subscribe(contact => {\r\n        this.contact = contact\r\n      });\r\n      this.userSubscriber = this.userService.user$.subscribe(user => {\r\n        this.user = user\r\n        this.moves = this.user.moves.filter(move => {\r\n          return move.toId === this.contact._id\r\n        })\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contactSubscriber.unsubscribe();\r\n    this.userSubscriber.unsubscribe();\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/contact'])\r\n  }\r\n\r\n  editContact() {\r\n    this.router.navigate(['/contact/edit', this.contact._id])\r\n  }\r\n\r\n}","<div class=\"contact-details-top-container\">\r\n    <div class=\"contact-details-container\">\r\n        <p>{{contact.name}}</p>\r\n        <p>{{contact.email}}</p>\r\n        <p>{{contact.phone}}</p>\r\n        <div class=\"contact-details-buttons\">\r\n            <button class=\"btn\" (click)=\"goBack()\">Back</button>\r\n            <button class=\"btn\" (click)=\"editContact()\">Edit</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"transactions-container\">\r\n        <bit-transfer [contact]=\"contact\" [userCoins]=\"user.coins\"></bit-transfer>\r\n    </div>\r\n    <transactions-list [moves]=\"moves\" [title]=\"title\"></transactions-list>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactService } from '../../services/contact-service/contact-service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forbiddenNameValidator } from 'src/app/directives/forbidden-name.directive';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'contact-edit',\r\n  templateUrl: './contact-edit.component.html',\r\n  styleUrls: ['./contact-edit.component.scss']\r\n})\r\nexport class ContactEditComponent implements OnInit, OnDestroy {\r\n\r\n  editableContact: ContactModel\r\n  contactForm: FormGroup;\r\n  paramSubscriber: Subscription\r\n  contactSubscriber: Subscription\r\n\r\n  constructor(private route: ActivatedRoute, public contactService: ContactService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.editableContact = this.contactService.getEmptyContact();\r\n    this.paramSubscriber = this.route.paramMap.subscribe((params) => {\r\n      const id = params.get('id');\r\n      if (id) {\r\n        //edit mode:\r\n        this.contactSubscriber = this.contactService.getContactById(id).subscribe(contact => {\r\n          this.editableContact.name = contact.name\r\n          this.editableContact.email = contact.email\r\n          this.editableContact.phone = contact.phone\r\n          this.editableContact._id = contact._id\r\n        })\r\n      }\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.paramSubscriber.unsubscribe()\r\n    this.contactSubscriber?.unsubscribe()\r\n  }\r\n\r\n  goBack() {\r\n    if (this.editableContact._id) {\r\n      this.router.navigate(['/contact', this.editableContact._id])\r\n    } else {\r\n      this.router.navigate(['/contact'])\r\n    }\r\n  }\r\n\r\n  saveContact() {\r\n    //any service use shall be done using subscribe. the navigate shall happen only after the service has finished its job!\r\n    this.contactService.saveContact(this.editableContact)\r\n    this.router.navigate(['contact'])\r\n  }\r\n\r\n  delete() {\r\n    //show the delete button only on edit mode!\r\n    this.contactService.deleteContact(this.editableContact._id)\r\n    this.router.navigate(['contact'])\r\n  }\r\n\r\n  inputChange(event) {\r\n    const field = event.target.name\r\n    const value = event.target.value\r\n    this.editableContact[field] = value\r\n  }\r\n\r\n}","<div class=\"contact-form\">\r\n    <div>\r\n        <div>\r\n            <label for=\"name\">Name</label>\r\n            <input name=\"name\" type=\"text\" value={{editableContact.name}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n        <div>\r\n            <label for=\"email\">email</label>\r\n            <input name=\"email\" type=\"text\" value={{editableContact.email}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n        <div>\r\n            <label for=\"phone\">Phone</label>\r\n            <input name=\"phone\" type=\"text\" value={{editableContact.phone}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"contact-edit-buttons\">\r\n    <button class=\"btn\" (click)=\"saveContact()\">Save</button>\r\n    <button class=\"btn\" (click)=\"goBack()\">Back</button>\r\n    <button class=\"btn\" (click)=\"delete()\">Delete</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\n\r\nimport { ContactService } from '../../services/contact-service/contact-service'\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'contact-page',\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrls: ['./contact-page.component.scss']\r\n})\r\n\r\nexport class ContactPageComponent implements OnInit {\r\n\r\n  contacts$: Observable<ContactModel[]>;\r\n\r\n  constructor(public contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    //when this page loads\r\n    //call the contactService to get the contacts from the mocked server\r\n    //then, subscribe to any changes made in the data to re-render the list on every change\r\n    //this approach requires use of ngOnDestroy to unsubscribe !\r\n\r\n    // this.contactService.loadContacts();\r\n    // this.contactService.contacts$.subscribe((contacts) => {\r\n    //   this.contacts = contacts\r\n    // })\r\n\r\n    //different approach (and more convenient)\r\n    this.contactService.loadContacts(null);\r\n    this.contacts$ = this.contactService.contacts$\r\n  }\r\n\r\n  onFilter(filterBy) {\r\n    this.contactService.loadContacts(filterBy);\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"contact-page-container\">\r\n    <div class=\"filter-and-add-contact-container\">\r\n        <div class=\"filter-container\">\r\n            <app-filter (onFilter)=\"onFilter($event)\"></app-filter>\r\n        </div>\r\n        <div class=\"contacts-list-container\">\r\n            <contact-list [contacts]=\"contacts$|async\"></contact-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"add-contact-container\">\r\n        <a [routerLink]=\"['/contact/edit']\">\r\n            <!-- <img class=\"create-contact\" src=\"../../../assets/icons/new contact4.png\" /> -->\r\n            <img class=\"create-contact\" src=\"../../../assets/add-group.png\" />\r\n        </a>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BitcoinService } from 'src/app/services/bitcoin-service/bitcoin-service.service';\r\n\r\n@Component({\r\n  selector: 'home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit, OnDestroy {\r\n\r\n  user: UserModel\r\n  userSubscriber: Subscription;\r\n  coinsValue: number\r\n  coins$: Observable<number>\r\n\r\n  constructor(private userService: UserService, private route: ActivatedRoute, private bitcoinService: BitcoinService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscriber = this.userService.user$.subscribe(user => {\r\n      this.user = user\r\n      this.coins$ = this.bitcoinService.getBitCoinRate(this.user.coins)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userSubscriber.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"home-page-top-container\">\r\n    <div class=\"home-container\">\r\n        <p class=\"greeting\">Hello {{user.name}}</p>\r\n        <p>Coins: {{user.coins}}</p>\r\n        <p>Value: {{coins$|async}}</p>\r\n    </div>\r\n    <transactions-list [moves]=\"user.moves\"></transactions-list>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { Observable } from 'rxjs';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forbiddenNameValidator } from 'src/app/directives/forbidden-name.directive';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.scss']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  user$: Observable<UserModel>\r\n  userNameForm: FormGroup;\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userNameForm = new FormGroup({\r\n      'name': new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        forbiddenNameValidator(/\\d/),// <-- Here's how you pass in the custom validator.\r\n      ]),\r\n    }, { validators: [], asyncValidators: [] });\r\n  }\r\n\r\n  onSubmit(value) {\r\n    this.userService.signup(value.name)\r\n    this.user$ = this.userService.user$\r\n    if (this.user$) {\r\n      this.userNameForm.patchValue({\r\n        name: '',\r\n      });\r\n      this.router.navigate(['home'])\r\n    }\r\n  }\r\n\r\n}","<div class=\"signup-container\">\r\n    <p class=\"signup-text\">Bit-Pay</p>\r\n    <img class=\"signup-img\"\r\n        src=\"https://res.cloudinary.com/due4sgv19/image/upload/v1581945841/q5qtcinyonpb7ggzlra9.png\">\r\n    <div class=\"form__group field\">\r\n        <div class=\"signup-form-and-button\">\r\n            <form class=\"signup-form\" [formGroup]=\"userNameForm\" (ngSubmit)=\"onSubmit(userNameForm.value)\">\r\n                <input type=\"text\" class=\"form__field\" placeholder=\"Name\" formControlName=\"name\" name=\"signup\" required\r\n                    minlength=\"2\">\r\n                <label for=\"name\" class=\"form__label\">Name</label>\r\n            </form>\r\n            <button class=\"btn\" (click)=\"onSubmit(userNameForm.value)\">Signup</button>\r\n        </div>\r\n        <div *ngIf=\"userNameForm.get('name').invalid && (userNameForm.get('name').dirty || userNameForm.get('name').touched)\"\r\n            class=\"alert alert-danger\">\r\n            <div *ngIf=\"userNameForm.get('name').errors.required\">\r\n                Name is required.\r\n            </div>\r\n            <div *ngIf=\"userNameForm.get('name').errors.minlength\">\r\n                Name must be at least 2 characters long.\r\n            </div>\r\n            <div *ngIf=\"userNameForm.get('name').errors.forbiddenName\">\r\n                Forbidden name entered!\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BitcoinService } from 'src/app/services/bitcoin-service/bitcoin-service.service';\r\nimport { ChartService } from 'src/app/services/chart-service/chart-service.service';\r\nimport ChartModel from 'src/app/models/chart.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'statistics-page',\r\n  templateUrl: './statistics-page.component.html',\r\n  styleUrls: ['./statistics-page.component.scss']\r\n})\r\nexport class StatisticsPageComponent implements OnInit, OnDestroy {\r\n\r\n  rate: number;\r\n  rateSubscriber: Subscription\r\n  chart1: ChartModel;\r\n  chart1Subscriber: Subscription\r\n  chart2: ChartModel\r\n  chart2Subscriber: Subscription\r\n\r\n\r\n  constructor(public bitcoinService: BitcoinService, public chartService: ChartService) { }\r\n\r\n  ngOnInit() {\r\n    this.rateSubscriber = this.bitcoinService.getBitCoinRate(1).subscribe(rate => {\r\n      this.rate = rate;\r\n    })\r\n    this.chart1Subscriber = this.bitcoinService.getMarketPrice().subscribe(data => {\r\n      this.chart1 = this.chartService.createChart(data.name, 'LineChart', data.values, ['Date', 'Price'])\r\n    })\r\n    this.chart2Subscriber = this.bitcoinService.getConfirmedTransactions().subscribe(data => {\r\n      this.chart2 = this.chartService.createChart(data.name, 'LineChart', data.values, ['Date', 'Daily Transactions'])\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.rateSubscriber.unsubscribe();\r\n    this.chart1Subscriber.unsubscribe();\r\n    this.chart2Subscriber.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- <h2>{{rate | currency:'$'}} </h2> -->\r\n<div class=\"statistics-container\">\r\n    <h2>Current BTC rate: ${{(1/rate).toPrecision(8)}} US </h2>\r\n    <div *ngIf=\"chart1\">\r\n        <app-chart [chart]=\"chart1\"></app-chart>\r\n    </div>\r\n    <div *ngIf=\"chart2\">\r\n        <app-chart [chart]=\"chart2\"></app-chart>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from '../user-service/user-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(public auth: UserService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['signup']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport ChartModel from 'src/app/models/chart.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\n\r\nexport class BitcoinService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBitCoinRate(coins: number): Observable<number> {\r\n    return this.http.get<number>(`https://blockchain.info/tobtc?currency=USD&value=${coins}`);\r\n  }\r\n\r\n  getMarketPrice(): Observable<any> {\r\n    return this.http.get<any>(`https://api.blockchain.info/charts/market-price?timespan=1week&format=json&cors=true`);\r\n  }\r\n\r\n  getConfirmedTransactions(): Observable<any> {\r\n    return this.http.get<any>(`https://api.blockchain.info/charts/n-transactions?timespan=1week&format=json&cors=true`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport chart from '../../models/chart.model';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport class ChartService {\r\n\r\n  constructor() { }\r\n\r\n  public createChart(name: string, type: string, data, columnName: object): chart {\r\n    data = data.map(line => {\r\n      const date = new Date(line.x * 1000);\r\n      let dateToDisplay = date.toDateString()\r\n      return { x: dateToDisplay, y: line.y }\r\n    })\r\n    return new chart(name, type, data, columnName)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { of } from 'rxjs'\r\nimport Contact from '../../models/contact.model';\r\nimport CONTACTS from '../mock/contacts'\r\n\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\n\r\nexport class ContactService {\r\n\r\n  //mock the server - make it a private variable\r\n  _contacts: Contact[] = CONTACTS;\r\n\r\n  //private behaviorSubject array of contacts:\r\n  _contacts$ = new BehaviorSubject<Array<Contact>>([])\r\n\r\n  //public observable of the privat var above\r\n  contacts$ = this._contacts$.asObservable()\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n  public loadContacts(filterBy = null): void {\r\n    let contacts = this._contacts;\r\n    if (filterBy) {\r\n      contacts = this._filter(contacts, filterBy)\r\n    }\r\n    this._contacts$.next(this._sort(contacts))\r\n  }\r\n\r\n\r\n  public getContactById(id: string): Observable<Contact> {\r\n    //mock the server work\r\n    const contact = this._contacts.find(contact => contact._id === id)\r\n\r\n    //return an observable\r\n    return contact ? of(contact) : Observable.throw(`Contact id ${id} not found!`)\r\n  }\r\n\r\n  public deleteContact(id: string) {\r\n    //mock the server work\r\n    this._contacts = this._contacts.filter(contact => contact._id !== id)\r\n\r\n    // change the observable data in the service - let all the subscribers know\r\n    this._contacts$.next(this._contacts)\r\n  }\r\n\r\n  public saveContact(contact: Contact) {\r\n    return contact._id ? this._updateContact(contact) : this._addContact(contact)\r\n  }\r\n\r\n  private _updateContact(contact: Contact) {\r\n    //mock the server work\r\n    this._contacts = this._contacts.map(c => contact._id === c._id ? contact : c)\r\n    // change the observable data in the service - let all the subscribers know\r\n    this._contacts$.next(this._sort(this._contacts))\r\n  }\r\n\r\n  private _addContact(contact: Contact) {\r\n    //mock the server work\r\n    const newContact = new Contact(contact.name, contact.email, contact.phone);\r\n    newContact.setId();\r\n    this._contacts.push(newContact)\r\n    this._contacts$.next(this._sort(this._contacts))\r\n  }\r\n\r\n  private _sort(arr: Contact[]): Contact[] {\r\n    return arr.sort((a, b) => {\r\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n        return -1;\r\n      }\r\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n  }\r\n\r\n  public getEmptyContact() {\r\n    let newContact = new Contact('', '', '')\r\n    delete newContact._id\r\n    return newContact;\r\n  }\r\n\r\n  private _filter(contacts, term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLocaleLowerCase().includes(term) ||\r\n        contact.phone.toLocaleLowerCase().includes(term) ||\r\n        contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n  }\r\n}","export default [{\r\n  \"_id\": \"5a56640269f443a5d64b32ca\",\r\n  \"name\": \"Ochoa Hyde\",\r\n  \"email\": \"ochoahyde@renovize.com\",\r\n  \"phone\": \"+1 (968) 593-3824\"\r\n},\r\n{\r\n  \"_id\": \"5a5664025f6ae9aa24a99fde\", \r\n  \"name\": \"Hallie Mclean\",\r\n  \"email\": \"halliemclean@renovize.com\",\r\n  \"phone\": \"+1 (948) 464-2888\"\r\n},\r\n{\r\n  \"_id\": \"5a56640252d6acddd183d319\", \r\n  \"name\": \"Parsons Norris\",\r\n  \"email\": \"parsonsnorris@renovize.com\",\r\n  \"phone\": \"+1 (958) 502-3495\"\r\n},\r\n{\r\n  \"_id\": \"5a566402ed1cf349f0b47b4d\", \r\n  \"name\": \"Rachel Lowe\",\r\n  \"email\": \"rachellowe@renovize.com\",\r\n  \"phone\": \"+1 (911) 475-2312\"\r\n},\r\n{\r\n  \"_id\": \"5a566402abce24c6bfe4699d\", \r\n  \"name\": \"Dominique Soto\",\r\n  \"email\": \"dominiquesoto@renovize.com\",\r\n  \"phone\": \"+1 (807) 551-3258\"\r\n},\r\n{\r\n  \"_id\": \"5a566402a6499c1d4da9220a\", \r\n  \"name\": \"Shana Pope\",\r\n  \"email\": \"shanapope@renovize.com\",\r\n  \"phone\": \"+1 (970) 527-3082\"\r\n},\r\n{\r\n  \"_id\": \"5a566402f90ae30e97f990db\", \r\n  \"name\": \"Faulkner Flores\",\r\n  \"email\": \"faulknerflores@renovize.com\",\r\n  \"phone\": \"+1 (952) 501-2678\"\r\n},\r\n{\r\n  \"_id\": \"5a5664027bae84ef280ffbdf\", \r\n  \"name\": \"Holder Bean\",\r\n  \"email\": \"holderbean@renovize.com\",\r\n  \"phone\": \"+1 (989) 503-2663\"\r\n},\r\n{\r\n  \"_id\": \"5a566402e3b846c5f6aec652\", \r\n  \"name\": \"Rosanne Shelton\",\r\n  \"email\": \"rosanneshelton@renovize.com\",\r\n  \"phone\": \"+1 (968) 454-3851\"\r\n},\r\n{\r\n  \"_id\": \"5a56640272c7dcdf59c3d411\", \r\n  \"name\": \"Pamela Nolan\",\r\n  \"email\": \"pamelanolan@renovize.com\",\r\n  \"phone\": \"+1 (986) 545-2166\"\r\n},\r\n{\r\n  \"_id\": \"5a5664029a8dd82a6178b15f\", \r\n  \"name\": \"Roy Cantu\",\r\n  \"email\": \"roycantu@renovize.com\",\r\n  \"phone\": \"+1 (929) 571-2295\"\r\n},\r\n{\r\n  \"_id\": \"5a5664028c096d08eeb13a8a\", \r\n  \"name\": \"Ollie Christian\",\r\n  \"email\": \"olliechristian@renovize.com\",\r\n  \"phone\": \"+1 (977) 419-3550\"\r\n},\r\n{\r\n  \"_id\": \"5a5664026c53582bb9ebe9d1\", \r\n  \"name\": \"Nguyen Walls\",\r\n  \"email\": \"nguyenwalls@renovize.com\",\r\n  \"phone\": \"+1 (963) 471-3181\"\r\n},\r\n{\r\n  \"_id\": \"5a56640298ab77236845b82b\",\r\n  \"name\": \"Glenna Santana\",\r\n  \"email\": \"glennasantana@renovize.com\",\r\n  \"phone\": \"+1 (860) 467-2376\"\r\n},\r\n{\r\n  \"_id\": \"5a56640208fba3e8ecb97305\", \r\n  \"name\": \"Malone Clark\",\r\n  \"email\": \"maloneclark@renovize.com\",\r\n  \"phone\": \"+1 (818) 565-2557\"\r\n},\r\n{\r\n  \"_id\": \"5a566402abb3146207bc4ec5\", \r\n  \"name\": \"Floyd Rutledge\",\r\n  \"email\": \"floydrutledge@renovize.com\",\r\n  \"phone\": \"+1 (807) 597-3629\"\r\n},\r\n{\r\n  \"_id\": \"5a56640298500fead8cb1ee5\", \r\n  \"name\": \"Grace James\",\r\n  \"email\": \"gracejames@renovize.com\",\r\n  \"phone\": \"+1 (959) 525-2529\"\r\n},\r\n{\r\n  \"_id\": \"5a56640243427b8f8445231e\", \r\n  \"name\": \"Tanner Gates\",\r\n  \"email\": \"tannergates@renovize.com\",\r\n  \"phone\": \"+1 (978) 591-2291\"\r\n},\r\n{\r\n  \"_id\": \"5a5664025c3abdad6f5e098c\", \r\n  \"name\": \"Lilly Conner\",\r\n  \"email\": \"lillyconner@renovize.com\",\r\n  \"phone\": \"+1 (842) 587-3812\"\r\n}]","import { Injectable } from '@angular/core';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport default class StorageServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public saveToStorage(key: string, value: Object) {\r\n    var str = JSON.stringify(value);\r\n    localStorage.setItem(key, str);\r\n  }\r\n\r\n  public load(key: string) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport storageService from '../storage-service/storage-service.service'\r\nimport UserModel from '../../models/user.model'\r\nimport ContactModel from '../../models/contact.model'\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport utilsService from '../utils-service/utils-sercice.service'\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport class UserService {\r\n\r\n  //mock the server - make it a private variable\r\n  private _user: UserModel\r\n\r\n  //private behaviorSubject array of contacts:\r\n  private _user$ = new BehaviorSubject<UserModel>(null)\r\n\r\n  //public observable of the privat var above\r\n  public user$ = this._user$.asObservable()\r\n\r\n  constructor(private storageService: storageService, private utilsService: utilsService) { }\r\n\r\n  public signup(userName: string) {\r\n    //this method gets a string representing a userName\r\n    //the method will check if there is a user in the local storage\r\n    //if there is a user in the local storage - return it\r\n    //otherwise - set a new user with 100 coins and the userName which was entered and return it \r\n    let user = this.storageService.load('bitcoin-user')\r\n    if (!user || user.name !== userName) {\r\n      user = {}\r\n      user.name = userName;\r\n      user.coins = 100;\r\n      user.moves = []\r\n      this.storageService.saveToStorage('bitcoin-user', user)\r\n    }\r\n    this._user = user\r\n    let sortedMoves = [...this._user.moves]\r\n    sortedMoves = this.sortMoves(sortedMoves)\r\n    this._user.moves = sortedMoves\r\n    this._user$.next(this._user)\r\n  }\r\n\r\n  public addMove(contact: ContactModel, amount: number) {\r\n    //moves an amount of coins from the current user to the given contact\r\n    const newTransaction = {\r\n      toId: contact._id,\r\n      to: contact.name,\r\n      at: Date.now(),\r\n      amount\r\n    }\r\n    if (this._user.coins - amount >= 0 && amount !== 0) {\r\n      this._user.coins -= amount\r\n      this._user.moves.push(newTransaction)\r\n      let sortedMoves = [...this._user.moves]\r\n      sortedMoves = this.sortMoves(sortedMoves)\r\n      this._user.moves = sortedMoves\r\n      this.storageService.saveToStorage('bitcoin-user', this._user)\r\n      this._user$.next(this._user)\r\n    }\r\n  }\r\n\r\n  public isAuthenticated() {\r\n    const user = this._user$.getValue()\r\n    return (user) ? true : false;\r\n  }\r\n\r\n  private sortMoves(moves) {\r\n    return moves.sort((move1, move2) => {\r\n      if (move1.at < move2.at) return 1\r\n      else if (move1.at > move2.at) return -1\r\n      else return 0;\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport default class UtilsSerciceService {\r\n\r\n  constructor() { }\r\n\r\n  public _makeId?(length = 10) {\r\n    let txt = ''\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (let i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}