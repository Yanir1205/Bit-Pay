{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/cmps/bit-transfer/bit-transfer.component.ts","webpack:///src/app/cmps/bit-transfer/bit-transfer.component.html","webpack:///src/app/cmps/chart/chart.component.ts","webpack:///src/app/cmps/chart/chart.component.html","webpack:///src/app/cmps/contact-list/contact-list.component.ts","webpack:///src/app/cmps/contact-list/contact-list.component.html","webpack:///src/app/cmps/contact-preview/contact-preview.component.ts","webpack:///src/app/cmps/contact-preview/contact-preview.component.html","webpack:///src/app/cmps/filter/filter.component.ts","webpack:///src/app/cmps/filter/filter.component.html","webpack:///src/app/cmps/nav-bar/nav-bar.component.ts","webpack:///src/app/cmps/nav-bar/nav-bar.component.html","webpack:///src/app/cmps/transaction-preview/transaction-preview.component.ts","webpack:///src/app/cmps/transaction-preview/transaction-preview.component.html","webpack:///src/app/cmps/transactions-list/transactions-list.component.ts","webpack:///src/app/cmps/transactions-list/transactions-list.component.html","webpack:///src/app/directives/forbidden-name.directive.ts","webpack:///src/app/models/chart.model.ts","webpack:///src/app/models/contact.model.ts","webpack:///src/app/pages/contact-details/contact-details.component.ts","webpack:///src/app/pages/contact-details/contact-details.component.html","webpack:///src/app/pages/contact-edit/contact-edit.component.ts","webpack:///src/app/pages/contact-edit/contact-edit.component.html","webpack:///src/app/pages/contact-page/contact-page.component.ts","webpack:///src/app/pages/contact-page/contact-page.component.html","webpack:///src/app/pages/home-page/home-page.component.ts","webpack:///src/app/pages/home-page/home-page.component.html","webpack:///src/app/pages/signup-page/signup-page.component.ts","webpack:///src/app/pages/signup-page/signup-page.component.html","webpack:///src/app/pages/statistics-page/statistics-page.component.ts","webpack:///src/app/pages/statistics-page/statistics-page.component.html","webpack:///src/app/services/auth-guard-service/auth-guard-service.service.ts","webpack:///src/app/services/bitcoin-service/bitcoin-service.service.ts","webpack:///src/app/services/chart-service/chart-service.service.ts","webpack:///src/app/services/contact-service/contact-service.ts","webpack:///src/app/services/mock/contacts.js","webpack:///src/app/services/storage-service/storage-service.service.ts","webpack:///src/app/services/user-service/user-service.service.ts","webpack:///src/app/services/utils-service/utils-sercice.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BitTransferComponent","userService","bitTransferForm","userDoesntHaveEnoughMoney","validators","asyncValidators","value","addMove","contact","amount","control","observable","userCoins","next","onSubmit","ChartComponent","changes","newData","chart","currentValue","data","map","item","x","y","myOptions","animation","duration","easing","startup","width","height","colors","curveType","backgroundColor","titleTextStyle","color","fontSize","bold","italic","hAxis","textStyle","vAxis","legend","ContactListComponent","ContactPreviewComponent","router","navigate","_id","contactClick","FilterComponent","onFilter","filterBy","emit","onFilterChange","NavBarComponent","TransactionPreviewComponent","date","Date","move","at","toLocaleDateString","toLocaleTimeString","TransactionsListComponent","moves","numOfTransactionToDisplay","length","forbiddenNameValidator","nameRe","forbidden","test","ForbiddenValidatorDirective","forbiddenName","RegExp","provide","useExisting","multi","ChartModel","type","columnNames","ContactModel","name","email","phone","_makeId","txt","possible","i","charAt","Math","floor","random","ContactDetailsComponent","route","contactService","paramMap","subscribe","params","get","contactSubscriber","getContactById","userSubscriber","user$","user","filter","toId","unsubscribe","goBack","editContact","ContactEditComponent","editableContact","getEmptyContact","paramSubscriber","saveContact","deleteContact","event","field","target","inputChange","delete","ContactPageComponent","loadContacts","contacts$","HomePageComponent","bitcoinService","coins$","getBitCoinRate","coins","SignupPageComponent","userNameForm","required","minLength","signup","patchValue","StatisticsPageComponent","chartService","rateSubscriber","rate","chart1Subscriber","getMarketPrice","chart1","createChart","values","chart2Subscriber","getConfirmedTransactions","chart2","AuthGuardService","auth","isAuthenticated","providedIn","BitcoinService","http","ChartService","columnName","line","dateToDisplay","toDateString","ContactService","_contacts","_contacts$","asObservable","contacts","_filter","_sort","find","throw","_updateContact","_addContact","c","newContact","setId","push","arr","sort","a","b","toLocaleLowerCase","term","includes","StorageServiceService","key","str","JSON","stringify","localStorage","setItem","parse","UserService","storageService","utilsService","_user$","userName","load","saveToStorage","_user","sortedMoves","sortMoves","newTransaction","to","now","getValue","move1","move2","UtilsSerciceService","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\n\r\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component'\r\nimport { HomePageComponent } from './pages/home-page/home-page.component'\r\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component'\r\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component'\r\nimport { StatisticsPageComponent } from './pages/statistics-page/statistics-page.component'\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { AuthGuardService } from './services/auth-guard-service/auth-guard-service.service';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'signup', component: SignupPageComponent },\r\n  { path: 'contact', component: ContactPageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/edit/:id', component: ContactEditComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/edit', component: ContactEditComponent, canActivate: [AuthGuardService] },\r\n  { path: 'contact/:id', component: ContactDetailsComponent, canActivate: [AuthGuardService] },\r\n  { path: 'statistics', component: StatisticsPageComponent, canActivate: [AuthGuardService] },\r\n  { path: 'home', component: HomePageComponent, canActivate: [AuthGuardService] },\r\n  { path: '**', redirectTo: 'home', pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'mister-bitcoin';\r\n}\r\n","<contact-nav-bar></contact-nav-bar>\r\n\r\n<!-- everything below this section is dependant on the routing! -->\r\n<main>\r\n    <router-outlet></router-outlet>\r\n</main>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { NavBarComponent } from './cmps/nav-bar/nav-bar.component'\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ContactPageComponent } from './pages/contact-page/contact-page.component';\r\nimport { HomePageComponent } from './pages/home-page/home-page.component';\r\nimport { ContactPreviewComponent } from './cmps/contact-preview/contact-preview.component';\r\nimport { ContactListComponent } from './cmps/contact-list/contact-list.component';\r\nimport { ContactDetailsComponent } from './pages/contact-details/contact-details.component';\r\nimport { ContactEditComponent } from './pages/contact-edit/contact-edit.component';\r\nimport { StatisticsPageComponent } from './pages/statistics-page/statistics-page.component'\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\nimport { ChartComponent } from './cmps/chart/chart.component';\r\nimport { FilterComponent } from './cmps/filter/filter.component';\r\nimport { SignupPageComponent } from './pages/signup-page/signup-page.component';\r\nimport { BitTransferComponent } from './cmps/bit-transfer/bit-transfer.component';\r\nimport { TransactionsListComponent } from './cmps/transactions-list/transactions-list.component';\r\nimport { TransactionPreviewComponent } from './cmps/transaction-preview/transaction-preview.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { ForbiddenValidatorDirective } from './directives/forbidden-name.directive';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    ContactPageComponent,\r\n    HomePageComponent,\r\n    ContactPreviewComponent,\r\n    ContactListComponent,\r\n    ContactDetailsComponent,\r\n    ContactEditComponent,\r\n    StatisticsPageComponent,\r\n    ChartComponent,\r\n    FilterComponent,\r\n    SignupPageComponent,\r\n    BitTransferComponent,\r\n    TransactionsListComponent,\r\n    TransactionPreviewComponent,\r\n    ForbiddenValidatorDirective\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    GoogleChartsModule.forRoot(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'bit-transfer',\r\n  templateUrl: './bit-transfer.component.html',\r\n  styleUrls: ['./bit-transfer.component.scss']\r\n})\r\nexport class BitTransferComponent implements OnInit {\r\n\r\n  @Input() contact: ContactModel\r\n  @Input() userCoins: number\r\n  amount: number\r\n  bitTransferForm: FormGroup;\r\n\r\n  constructor(private userService: UserService) { }\r\n\r\n  ngOnInit(): void {\r\n    debugger\r\n    this.bitTransferForm = new FormGroup({\r\n      'amount': new FormControl('', [\r\n      ], [this.userDoesntHaveEnoughMoney]),\r\n    }, { validators: [], asyncValidators: [] });\r\n  }\r\n\r\n  onSubmit(value) {\r\n    debugger\r\n    this.userService.addMove(this.contact, this.amount)\r\n    //do not enable any transfer if user doesn't have enough money!\r\n    //make it appear with validation!\r\n  }\r\n\r\n  userDoesntHaveEnoughMoney(control: FormControl): Observable<ValidationErrors | null> {\r\n    debugger\r\n    //check if the current user has enough money and return a new observable with the answer\r\n    return new Observable((observable) => {\r\n      if ((this.userCoins - this.amount > 0) && (this.amount > 0)) {\r\n        observable.next({ 'amount': true })\r\n      } else {\r\n        observable.next(null)\r\n      }\r\n    })\r\n  }\r\n}","<div class=\"transaction-cmp-container\">\r\n    <p class=\"transaction-contact\">Transfer Bit to {{contact.name}}</p>\r\n    <div class=\"transaction-form-container\">\r\n        <form class=\"transfer-form\" (ngSubmit)=\"onSubmit(bitTransferForm.value)\" [formGroup]=\"bitTransferForm\">\r\n            <label for=\"amount\">Amount:</label>\r\n            <input type=\"number\" name=\"amount\" formControlName=\"amount\" [(ngModel)]=\"amount\">\r\n        </form>\r\n        <button class=\"btn\" (click)=\"onSubmit(bitTransferForm.value)\">Transfer</button>\r\n    </div>\r\n    <div *ngIf=\"bitTransferForm.get('amount').invalid && (bitTransferForm.get('amount').dirty || bitTransferForm.get('amount').touched)\"\r\n    class=\"alert alert-danger\">\r\n    <div *ngIf=\"bitTransferForm.get('amount').errors.userDoesntHaveEnoughMoney\">\r\n        Not enough money!\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n<!-- <div class=\"signup-form-and-button\">\r\n    <form class=\"signup-form\" [formGroup]=\"userNameForm\" (ngSubmit)=\"onSubmit(userNameForm.value)\">\r\n        <input type=\"text\" class=\"form__field\" placeholder=\"Name\" formControlName=\"name\" name=\"signup\" required\r\n            minlength=\"2\">\r\n        <label for=\"name\" class=\"form__label\">Name</label>\r\n    </form>\r\n    <button class=\"btn\" (click)=\"onSubmit(userNameForm.value)\">Signup</button>\r\n</div>\r\n<div *ngIf=\"userNameForm.get('name').invalid && (userNameForm.get('name').dirty || userNameForm.get('name').touched)\"\r\n    class=\"alert alert-danger\">\r\n    <div *ngIf=\"userNameForm.get('name').errors.required\">\r\n        Name is required.\r\n    </div>\r\n    <div *ngIf=\"userNameForm.get('name').errors.minlength\">\r\n        Name must be at least 2 characters long.\r\n    </div>\r\n    <div *ngIf=\"userNameForm.get('name').errors.forbiddenName\">\r\n        Forbidden name entered!\r\n    </div>\r\n</div>\r\n</div> -->","import { Component, OnInit, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport ChartModel from 'src/app/models/chart.model';\r\n@Component({\r\n  selector: 'app-chart',\r\n  templateUrl: './chart.component.html',\r\n  styleUrls: ['./chart.component.scss']\r\n})\r\nexport class ChartComponent implements OnInit, OnChanges {\r\n  @Input() chart: ChartModel;\r\n  myOptions: Object\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    const newData = changes.chart.currentValue.data.map(item => {\r\n      return [item.x, item.y]\r\n    })\r\n    this.chart.data = newData\r\n    this.myOptions = {\r\n      //graph animation:\r\n      animation: {\r\n        duration: 1000,\r\n        easing: 'ease-int-out',\r\n        startup: true\r\n      },\r\n      width: 550,\r\n      height: 350,\r\n      colors: ['#ed4d6e'],\r\n      curveType: 'function',\r\n      backgroundColor: 'transparent',\r\n      // chartArea: { width: '65%'},\r\n      titleTextStyle: {\r\n        color: 'white',\r\n        fontSize: 16, \r\n        bold: false, \r\n        italic: false\r\n      },\r\n      hAxis: { textStyle: { color: 'white' } },\r\n      vAxis: { textStyle: { color: 'white' } },\r\n      legend: { textStyle: { color: 'white' } },\r\n    }\r\n  }\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}","<div>\r\n    <google-chart \r\n        [title]=\"chart.title\" \r\n        [type]=\"chart.type\" \r\n        [data]=\"chart.data\" \r\n        [columnNames]=\"chart.columnNames\"\r\n        [options]=\"myOptions\">\r\n    </google-chart>\r\n</div>","import { Component, OnInit, Output, EventEmitter, OnDestroy, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\n\r\n@Component({\r\n  selector: 'contact-list',\r\n  templateUrl: './contact-list.component.html',\r\n  styleUrls: ['./contact-list.component.scss']\r\n})\r\nexport class ContactListComponent implements OnInit {\r\n\r\n  @Input() contacts: ContactModel[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p *ngFor=\"let contact of contacts\">\r\n    <contact-preview [contact]=\"contact\"></contact-preview>\r\n</p>","import { Component, OnInit, Input } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'contact-preview',\r\n  templateUrl: './contact-preview.component.html',\r\n  styleUrls: ['./contact-preview.component.scss']\r\n})\r\nexport class ContactPreviewComponent implements OnInit {\r\n\r\n  @Input() contact: ContactModel;\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  contactClick() {\r\n    this.router.navigate(['/contact' , this.contact._id])\r\n  }\r\n\r\n}\r\n","<div class=\"contact-preview-container\" (click)=\"contactClick()\">\r\n    {{contact.name}}\r\n    <img class=\"user-img\" src=\"https://res.cloudinary.com/due4sgv19/image/upload/v1582009348/bsal7g8oifemvty90xsu.png\">\r\n</div>","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-filter',\r\n  templateUrl: './filter.component.html',\r\n  styleUrls: ['./filter.component.scss']\r\n})\r\nexport class FilterComponent implements OnInit {\r\n\r\n  @Output() onFilter=new EventEmitter<string>()\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onFilterChange(filterBy){\r\n    this.onFilter.emit(filterBy);\r\n  }\r\n\r\n}\r\n","<input class=\"search-contacts\" (keyup)=\"onFilterChange($event.target.value)\" placeholder=\"Search Contacts\">\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contact-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.scss']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<header class=\"main-nav\">\r\n  <a exact class='main-nav-item' routerLink=\"/home\" routerLinkActive=\"selected\">\r\n    <img src='assets/icons/home2.png' alt=\"Home\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n  <a class='main-nav-item' routerLink=\"/contact\" routerLinkActive=\"selected\">\r\n    <img src=\"assets/icons/phone-book.png\" alt=\"Contacts\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n  <a class='main-nav-item' routerLink=\"/statistics\" routerLinkActive=\"selected\">\r\n    <img src=\"assets/icons/pie-chart (1).png\" alt=\"Statistics\" width=\"24px\" height=\"24px\" />\r\n  </a>\r\n</header>","import { Component, OnInit, Input } from '@angular/core';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'transaction-preview',\r\n  templateUrl: './transaction-preview.component.html',\r\n  styleUrls: ['./transaction-preview.component.scss']\r\n})\r\nexport class TransactionPreviewComponent implements OnInit {\r\n\r\n  @Input() move: TransactionModel\r\n  date\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    this.date = new Date(this.move.at).toLocaleDateString() + ' ' + new Date(this.move.at).toLocaleTimeString()\r\n  }\r\n\r\n}\r\n","<div class=\"transaction-preview\">\r\n    <p>To: {{move.to}}</p>\r\n    <p>At: {{date}}</p>\r\n    <p>Amount: {{move.amount}}</p>\r\n</div>\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'transactions-list',\r\n  templateUrl: './transactions-list.component.html',\r\n  styleUrls: ['./transactions-list.component.scss']\r\n})\r\nexport class TransactionsListComponent implements OnInit {\r\n\r\n  @Input() moves: TransactionModel[] = []\r\n  @Input() title: string = 'Your last 3 Transactions'\r\n  numOfTransactionToDisplay: number = 3\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n    if (this.title !== 'Your last 3 Transactions') {\r\n      this.numOfTransactionToDisplay = this.moves.length\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"transaction-list-container\" *ngIf=\"moves.length>0\">\r\n    <div class=\"transaction-title-container\">\r\n        <p>{{title}}:</p>\r\n    </div>\r\n    <div class=\"transaction-preview-container\" *ngFor=\"let move of moves; let i = index\">\r\n        <transaction-preview *ngIf=\"i<numOfTransactionToDisplay\" [move]=\"move\"></transaction-preview>\r\n    </div>\r\n</div>","import { ValidatorFn, AbstractControl, Validator, NG_VALIDATORS, ValidationErrors } from '@angular/forms';\r\nimport { Directive, Input } from '@angular/core';\r\n\r\n/** A hero's name can't match the given regular expression */\r\nexport function forbiddenNameValidator(nameRe: RegExp): ValidatorFn {\r\n  return (control: AbstractControl): ValidationErrors | null => {\r\n    const forbidden = nameRe.test(control.value);\r\n    return forbidden ? { 'forbiddenName': { value: control.value } } : null;\r\n  };\r\n}\r\n\r\n\r\n\r\n@Directive({\r\n  selector: '[ForbiddenName]',\r\n  providers: [{ provide: NG_VALIDATORS, useExisting: ForbiddenValidatorDirective, multi: true }]\r\n})\r\nexport class ForbiddenValidatorDirective implements Validator {\r\n  @Input('ForbiddenName') forbiddenName: string;\r\n\r\n  validate(control: AbstractControl): ValidationErrors | null {\r\n    return this.forbiddenName ? forbiddenNameValidator(new RegExp(this.forbiddenName, 'i'))(control)\r\n      : null;\r\n  }\r\n}","export default class ChartModel {\r\n\r\n    constructor(public title: string, public type: string, public data: object, public columnNames: object) {\r\n\r\n    }\r\n\r\n    \r\n\r\n}","export default class ContactModel {\r\n    \r\n    public _id?= null;\r\n\r\n    constructor(public name: string, public email: string, public phone: string) {\r\n\r\n    }\r\n\r\n    public setId?() {\r\n        this._id = this._makeId();\r\n    }\r\n\r\n    private _makeId?(length = 10) {\r\n        let txt = ''\r\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n        for (let i = 0; i < length; i++) {\r\n            txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n        }\r\n        return txt\r\n    }\r\n\r\n\r\n}","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactService } from '../../services/contact-service/contact-service';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { Subscription } from 'rxjs';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport TransactionModel from 'src/app/models/transaction.model';\r\n\r\n@Component({\r\n  selector: 'contact-details',\r\n  templateUrl: './contact-details.component.html',\r\n  styleUrls: ['./contact-details.component.scss']\r\n})\r\nexport class ContactDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  contact: ContactModel\r\n  user: UserModel\r\n  moves: TransactionModel[]\r\n  contactSubscriber: Subscription\r\n  userSubscriber: Subscription\r\n  title: string = 'Your recent transactions'\r\n\r\n  constructor(private route: ActivatedRoute, public contactService: ContactService, private router: Router, private userService: UserService) { }\r\n\r\n  ngOnInit() {\r\n    //on every change on the id in the url - re-render the details page\r\n    this.route.paramMap.subscribe((params) => {\r\n      const id = params.get('id');\r\n      this.contactSubscriber = this.contactService.getContactById(id).subscribe(contact => {\r\n        this.contact = contact\r\n      });\r\n      this.userSubscriber = this.userService.user$.subscribe(user => {\r\n        this.user = user\r\n        this.moves = this.user.moves.filter(move => {\r\n          return move.toId === this.contact._id\r\n        })\r\n      })\r\n    })\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.contactSubscriber.unsubscribe();\r\n    this.userSubscriber.unsubscribe();\r\n  }\r\n\r\n  goBack() {\r\n    this.router.navigate(['/contact'])\r\n  }\r\n\r\n  editContact() {\r\n    this.router.navigate(['/contact/edit', this.contact._id])\r\n  }\r\n\r\n}","<div class=\"contact-details-top-container\">\r\n    <div class=\"contact-details-container\">\r\n        <p>{{contact.name}}</p>\r\n        <p>{{contact.email}}</p>\r\n        <p>{{contact.phone}}</p>\r\n        <div class=\"contact-details-buttons\">\r\n            <button class=\"btn\" (click)=\"goBack()\">Back</button>\r\n            <button class=\"btn\" (click)=\"editContact()\">Edit</button>\r\n        </div>\r\n    </div>\r\n    <div class=\"transactions-container\">\r\n        <bit-transfer [contact]=\"contact\" [userCoins]=\"user.coins\"></bit-transfer>\r\n    </div>\r\n    <transactions-list [moves]=\"moves\" [title]=\"title\"></transactions-list>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ContactService } from '../../services/contact-service/contact-service';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forbiddenNameValidator } from 'src/app/directives/forbidden-name.directive';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'contact-edit',\r\n  templateUrl: './contact-edit.component.html',\r\n  styleUrls: ['./contact-edit.component.scss']\r\n})\r\nexport class ContactEditComponent implements OnInit, OnDestroy {\r\n\r\n  editableContact: ContactModel\r\n  contactForm: FormGroup;\r\n  paramSubscriber: Subscription\r\n  contactSubscriber: Subscription\r\n\r\n  constructor(private route: ActivatedRoute, public contactService: ContactService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    this.editableContact = this.contactService.getEmptyContact();\r\n    this.paramSubscriber = this.route.paramMap.subscribe((params) => {\r\n      const id = params.get('id');\r\n      if (id) {\r\n        //edit mode:\r\n        this.contactSubscriber = this.contactService.getContactById(id).subscribe(contact => {\r\n          this.editableContact.name = contact.name\r\n          this.editableContact.email = contact.email\r\n          this.editableContact.phone = contact.phone\r\n          this.editableContact._id = contact._id\r\n        })\r\n      }\r\n    })\r\n  }\r\n  ngOnDestroy() {\r\n    this.paramSubscriber.unsubscribe()\r\n    this.contactSubscriber?.unsubscribe()\r\n  }\r\n\r\n  goBack() {\r\n    if (this.editableContact._id) {\r\n      this.router.navigate(['/contact', this.editableContact._id])\r\n    } else {\r\n      this.router.navigate(['/contact'])\r\n    }\r\n  }\r\n\r\n  saveContact() {\r\n    //any service use shall be done using subscribe. the navigate shall happen only after the service has finished its job!\r\n    this.contactService.saveContact(this.editableContact)\r\n    this.router.navigate(['contact'])\r\n  }\r\n\r\n  delete() {\r\n    //show the delete button only on edit mode!\r\n    this.contactService.deleteContact(this.editableContact._id)\r\n    this.router.navigate(['contact'])\r\n  }\r\n\r\n  inputChange(event) {\r\n    const field = event.target.name\r\n    const value = event.target.value\r\n    this.editableContact[field] = value\r\n  }\r\n\r\n}","<div class=\"contact-form\">\r\n    <div>\r\n        <div>\r\n            <label for=\"name\">Name</label>\r\n            <input name=\"name\" type=\"text\" value={{editableContact.name}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n        <div>\r\n            <label for=\"email\">email</label>\r\n            <input name=\"email\" type=\"text\" value={{editableContact.email}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n        <div>\r\n            <label for=\"phone\">Phone</label>\r\n            <input name=\"phone\" type=\"text\" value={{editableContact.phone}} (keyup)=\"inputChange($event)\">\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"contact-edit-buttons\">\r\n    <button class=\"btn\" (click)=\"saveContact()\">Save</button>\r\n    <button class=\"btn\" (click)=\"goBack()\">Back</button>\r\n    <button class=\"btn\" (click)=\"delete()\">Delete</button>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport ContactModel from 'src/app/models/contact.model';\r\n\r\nimport { ContactService } from '../../services/contact-service/contact-service'\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'contact-page',\r\n  templateUrl: './contact-page.component.html',\r\n  styleUrls: ['./contact-page.component.scss']\r\n})\r\n\r\nexport class ContactPageComponent implements OnInit {\r\n\r\n  contacts$: Observable<ContactModel[]>;\r\n\r\n  constructor(public contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    //when this page loads\r\n    //call the contactService to get the contacts from the mocked server\r\n    //then, subscribe to any changes made in the data to re-render the list on every change\r\n    //this approach requires use of ngOnDestroy to unsubscribe !\r\n\r\n    // this.contactService.loadContacts();\r\n    // this.contactService.contacts$.subscribe((contacts) => {\r\n    //   this.contacts = contacts\r\n    // })\r\n\r\n    //different approach (and more convenient)\r\n    this.contactService.loadContacts(null);\r\n    this.contacts$ = this.contactService.contacts$\r\n  }\r\n\r\n  onFilter(filterBy) {\r\n    this.contactService.loadContacts(filterBy);\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"contact-page-container\">\r\n    <div class=\"filter-and-add-contact-container\">\r\n        <div class=\"filter-container\">\r\n            <app-filter (onFilter)=\"onFilter($event)\"></app-filter>\r\n        </div>\r\n        <div class=\"contacts-list-container\">\r\n            <contact-list [contacts]=\"contacts$|async\"></contact-list>\r\n        </div>\r\n    </div>\r\n    <div class=\"add-contact-container\">\r\n        <a [routerLink]=\"['/contact/edit']\">\r\n            <!-- <img class=\"create-contact\" src=\"../../../assets/icons/new contact4.png\" /> -->\r\n            <img class=\"create-contact\" src=\"../../../assets/add-group.png\" />\r\n        </a>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription, Observable } from 'rxjs';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BitcoinService } from 'src/app/services/bitcoin-service/bitcoin-service.service';\r\n\r\n@Component({\r\n  selector: 'home-page',\r\n  templateUrl: './home-page.component.html',\r\n  styleUrls: ['./home-page.component.scss']\r\n})\r\nexport class HomePageComponent implements OnInit, OnDestroy {\r\n\r\n  user: UserModel\r\n  userSubscriber: Subscription;\r\n  coinsValue: number\r\n  coins$: Observable<number>\r\n\r\n  constructor(private userService: UserService, private route: ActivatedRoute, private bitcoinService: BitcoinService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSubscriber = this.userService.user$.subscribe(user => {\r\n      this.user = user\r\n      this.coins$ = this.bitcoinService.getBitCoinRate(this.user.coins)\r\n    })\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.userSubscriber.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"home-page-top-container\">\r\n    <div class=\"home-container\">\r\n        <p class=\"greeting\">Hello {{user.name}}</p>\r\n        <p>Coins: {{user.coins}}</p>\r\n        <p>Value: {{coins$|async}}</p>\r\n    </div>\r\n    <transactions-list [moves]=\"user.moves\"></transactions-list>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/services/user-service/user-service.service';\r\nimport { Observable } from 'rxjs';\r\nimport UserModel from 'src/app/models/user.model';\r\nimport { Router } from '@angular/router';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport { forbiddenNameValidator } from 'src/app/directives/forbidden-name.directive';\r\n\r\n@Component({\r\n  selector: 'app-signup-page',\r\n  templateUrl: './signup-page.component.html',\r\n  styleUrls: ['./signup-page.component.scss']\r\n})\r\nexport class SignupPageComponent implements OnInit {\r\n\r\n  user$: Observable<UserModel>\r\n  userNameForm: FormGroup;\r\n\r\n  constructor(private userService: UserService, private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userNameForm = new FormGroup({\r\n      'name': new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(2),\r\n        forbiddenNameValidator(/\\d/),// <-- Here's how you pass in the custom validator.\r\n      ]),\r\n    }, { validators: [], asyncValidators: [] });\r\n  }\r\n\r\n  onSubmit(value) {\r\n    this.userService.signup(value.name)\r\n    this.user$ = this.userService.user$\r\n    if (this.user$) {\r\n      this.userNameForm.patchValue({\r\n        name: '',\r\n      });\r\n      this.router.navigate(['home'])\r\n    }\r\n  }\r\n\r\n}","<div class=\"signup-container\">\r\n    <p class=\"signup-text\">Bit-Pay</p>\r\n    <img class=\"signup-img\"\r\n        src=\"https://res.cloudinary.com/due4sgv19/image/upload/v1581945841/q5qtcinyonpb7ggzlra9.png\">\r\n    <div class=\"form__group field\">\r\n        <div class=\"signup-form-and-button\">\r\n            <form class=\"signup-form\" [formGroup]=\"userNameForm\" (ngSubmit)=\"onSubmit(userNameForm.value)\">\r\n                <input type=\"text\" class=\"form__field\" placeholder=\"Name\" formControlName=\"name\" name=\"signup\" required\r\n                    minlength=\"2\">\r\n                <label for=\"name\" class=\"form__label\">Name</label>\r\n            </form>\r\n            <button class=\"btn\" (click)=\"onSubmit(userNameForm.value)\">Signup</button>\r\n        </div>\r\n        <div *ngIf=\"userNameForm.get('name').invalid && (userNameForm.get('name').dirty || userNameForm.get('name').touched)\"\r\n            class=\"alert alert-danger\">\r\n            <div *ngIf=\"userNameForm.get('name').errors.required\">\r\n                Name is required.\r\n            </div>\r\n            <div *ngIf=\"userNameForm.get('name').errors.minlength\">\r\n                Name must be at least 2 characters long.\r\n            </div>\r\n            <div *ngIf=\"userNameForm.get('name').errors.forbiddenName\">\r\n                Forbidden name entered!\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { BitcoinService } from 'src/app/services/bitcoin-service/bitcoin-service.service';\r\nimport { ChartService } from 'src/app/services/chart-service/chart-service.service';\r\nimport ChartModel from 'src/app/models/chart.model';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'statistics-page',\r\n  templateUrl: './statistics-page.component.html',\r\n  styleUrls: ['./statistics-page.component.scss']\r\n})\r\nexport class StatisticsPageComponent implements OnInit, OnDestroy {\r\n\r\n  rate: number;\r\n  rateSubscriber: Subscription\r\n  chart1: ChartModel;\r\n  chart1Subscriber: Subscription\r\n  chart2: ChartModel\r\n  chart2Subscriber: Subscription\r\n\r\n\r\n  constructor(public bitcoinService: BitcoinService, public chartService: ChartService) { }\r\n\r\n  ngOnInit() {\r\n    this.rateSubscriber = this.bitcoinService.getBitCoinRate(1).subscribe(rate => {\r\n      this.rate = rate;\r\n    })\r\n    this.chart1Subscriber = this.bitcoinService.getMarketPrice().subscribe(data => {\r\n      this.chart1 = this.chartService.createChart(data.name, 'LineChart', data.values, ['Date', 'Price'])\r\n    })\r\n    this.chart2Subscriber = this.bitcoinService.getConfirmedTransactions().subscribe(data => {\r\n      this.chart2 = this.chartService.createChart(data.name, 'LineChart', data.values, ['Date', 'Daily Transactions'])\r\n    })\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.rateSubscriber.unsubscribe();\r\n    this.chart1Subscriber.unsubscribe();\r\n    this.chart2Subscriber.unsubscribe();\r\n  }\r\n\r\n}\r\n","<!-- <h2>{{rate | currency:'$'}} </h2> -->\r\n<div class=\"statistics-container\">\r\n    <h2>Current BTC rate: ${{(1/rate).toPrecision(8)}} US </h2>\r\n    <div *ngIf=\"chart1\">\r\n        <app-chart [chart]=\"chart1\"></app-chart>\r\n    </div>\r\n    <div *ngIf=\"chart2\">\r\n        <app-chart [chart]=\"chart2\"></app-chart>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { UserService } from '../user-service/user-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuardService implements CanActivate {\r\n\r\n  constructor(public auth: UserService, public router: Router) { }\r\n\r\n  canActivate(): boolean {\r\n    if (!this.auth.isAuthenticated()) {\r\n      this.router.navigate(['signup']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport ChartModel from 'src/app/models/chart.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\n\r\nexport class BitcoinService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getBitCoinRate(coins: number): Observable<number> {\r\n    return this.http.get<number>(`https://blockchain.info/tobtc?currency=USD&value=${coins}`);\r\n  }\r\n\r\n  getMarketPrice(): Observable<any> {\r\n    return this.http.get<any>(`https://api.blockchain.info/charts/market-price?timespan=1week&format=json&cors=true`);\r\n  }\r\n\r\n  getConfirmedTransactions(): Observable<any> {\r\n    return this.http.get<any>(`https://api.blockchain.info/charts/n-transactions?timespan=1week&format=json&cors=true`);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport chart from '../../models/chart.model';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport class ChartService {\r\n\r\n  constructor() { }\r\n\r\n  public createChart(name: string, type: string, data, columnName: object): chart {\r\n    data = data.map(line => {\r\n      const date = new Date(line.x * 1000);\r\n      let dateToDisplay = date.toDateString()\r\n      return { x: dateToDisplay, y: line.y }\r\n    })\r\n    return new chart(name, type, data, columnName)\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { of } from 'rxjs'\r\nimport Contact from '../../models/contact.model';\r\nimport CONTACTS from '../mock/contacts'\r\n\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\n\r\nexport class ContactService {\r\n\r\n  //mock the server - make it a private variable\r\n  _contacts: Contact[] = CONTACTS;\r\n\r\n  //private behaviorSubject array of contacts:\r\n  _contacts$ = new BehaviorSubject<Array<Contact>>([])\r\n\r\n  //public observable of the privat var above\r\n  contacts$ = this._contacts$.asObservable()\r\n\r\n\r\n  constructor() {\r\n  }\r\n\r\n\r\n  public loadContacts(filterBy = null): void {\r\n    let contacts = this._contacts;\r\n    if (filterBy) {\r\n      contacts = this._filter(contacts, filterBy)\r\n    }\r\n    this._contacts$.next(this._sort(contacts))\r\n  }\r\n\r\n\r\n  public getContactById(id: string): Observable<Contact> {\r\n    //mock the server work\r\n    const contact = this._contacts.find(contact => contact._id === id)\r\n\r\n    //return an observable\r\n    return contact ? of(contact) : Observable.throw(`Contact id ${id} not found!`)\r\n  }\r\n\r\n  public deleteContact(id: string) {\r\n    //mock the server work\r\n    this._contacts = this._contacts.filter(contact => contact._id !== id)\r\n\r\n    // change the observable data in the service - let all the subscribers know\r\n    this._contacts$.next(this._contacts)\r\n  }\r\n\r\n  public saveContact(contact: Contact) {\r\n    return contact._id ? this._updateContact(contact) : this._addContact(contact)\r\n  }\r\n\r\n  private _updateContact(contact: Contact) {\r\n    //mock the server work\r\n    this._contacts = this._contacts.map(c => contact._id === c._id ? contact : c)\r\n    // change the observable data in the service - let all the subscribers know\r\n    this._contacts$.next(this._sort(this._contacts))\r\n  }\r\n\r\n  private _addContact(contact: Contact) {\r\n    //mock the server work\r\n    const newContact = new Contact(contact.name, contact.email, contact.phone);\r\n    newContact.setId();\r\n    this._contacts.push(newContact)\r\n    this._contacts$.next(this._sort(this._contacts))\r\n  }\r\n\r\n  private _sort(arr: Contact[]): Contact[] {\r\n    return arr.sort((a, b) => {\r\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n        return -1;\r\n      }\r\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n  }\r\n\r\n  public getEmptyContact() {\r\n    let newContact = new Contact('', '', '')\r\n    delete newContact._id\r\n    return newContact;\r\n  }\r\n\r\n  private _filter(contacts, term) {\r\n    term = term.toLocaleLowerCase()\r\n    return contacts.filter(contact => {\r\n      return contact.name.toLocaleLowerCase().includes(term) ||\r\n        contact.phone.toLocaleLowerCase().includes(term) ||\r\n        contact.email.toLocaleLowerCase().includes(term)\r\n    })\r\n  }\r\n}","export default [{\r\n  \"_id\": \"5a56640269f443a5d64b32ca\",\r\n  \"name\": \"Ochoa Hyde\",\r\n  \"email\": \"ochoahyde@renovize.com\",\r\n  \"phone\": \"+1 (968) 593-3824\"\r\n},\r\n{\r\n  \"_id\": \"5a5664025f6ae9aa24a99fde\", \r\n  \"name\": \"Hallie Mclean\",\r\n  \"email\": \"halliemclean@renovize.com\",\r\n  \"phone\": \"+1 (948) 464-2888\"\r\n},\r\n{\r\n  \"_id\": \"5a56640252d6acddd183d319\", \r\n  \"name\": \"Parsons Norris\",\r\n  \"email\": \"parsonsnorris@renovize.com\",\r\n  \"phone\": \"+1 (958) 502-3495\"\r\n},\r\n{\r\n  \"_id\": \"5a566402ed1cf349f0b47b4d\", \r\n  \"name\": \"Rachel Lowe\",\r\n  \"email\": \"rachellowe@renovize.com\",\r\n  \"phone\": \"+1 (911) 475-2312\"\r\n},\r\n{\r\n  \"_id\": \"5a566402abce24c6bfe4699d\", \r\n  \"name\": \"Dominique Soto\",\r\n  \"email\": \"dominiquesoto@renovize.com\",\r\n  \"phone\": \"+1 (807) 551-3258\"\r\n},\r\n{\r\n  \"_id\": \"5a566402a6499c1d4da9220a\", \r\n  \"name\": \"Shana Pope\",\r\n  \"email\": \"shanapope@renovize.com\",\r\n  \"phone\": \"+1 (970) 527-3082\"\r\n},\r\n{\r\n  \"_id\": \"5a566402f90ae30e97f990db\", \r\n  \"name\": \"Faulkner Flores\",\r\n  \"email\": \"faulknerflores@renovize.com\",\r\n  \"phone\": \"+1 (952) 501-2678\"\r\n},\r\n{\r\n  \"_id\": \"5a5664027bae84ef280ffbdf\", \r\n  \"name\": \"Holder Bean\",\r\n  \"email\": \"holderbean@renovize.com\",\r\n  \"phone\": \"+1 (989) 503-2663\"\r\n},\r\n{\r\n  \"_id\": \"5a566402e3b846c5f6aec652\", \r\n  \"name\": \"Rosanne Shelton\",\r\n  \"email\": \"rosanneshelton@renovize.com\",\r\n  \"phone\": \"+1 (968) 454-3851\"\r\n},\r\n{\r\n  \"_id\": \"5a56640272c7dcdf59c3d411\", \r\n  \"name\": \"Pamela Nolan\",\r\n  \"email\": \"pamelanolan@renovize.com\",\r\n  \"phone\": \"+1 (986) 545-2166\"\r\n},\r\n{\r\n  \"_id\": \"5a5664029a8dd82a6178b15f\", \r\n  \"name\": \"Roy Cantu\",\r\n  \"email\": \"roycantu@renovize.com\",\r\n  \"phone\": \"+1 (929) 571-2295\"\r\n},\r\n{\r\n  \"_id\": \"5a5664028c096d08eeb13a8a\", \r\n  \"name\": \"Ollie Christian\",\r\n  \"email\": \"olliechristian@renovize.com\",\r\n  \"phone\": \"+1 (977) 419-3550\"\r\n},\r\n{\r\n  \"_id\": \"5a5664026c53582bb9ebe9d1\", \r\n  \"name\": \"Nguyen Walls\",\r\n  \"email\": \"nguyenwalls@renovize.com\",\r\n  \"phone\": \"+1 (963) 471-3181\"\r\n},\r\n{\r\n  \"_id\": \"5a56640298ab77236845b82b\",\r\n  \"name\": \"Glenna Santana\",\r\n  \"email\": \"glennasantana@renovize.com\",\r\n  \"phone\": \"+1 (860) 467-2376\"\r\n},\r\n{\r\n  \"_id\": \"5a56640208fba3e8ecb97305\", \r\n  \"name\": \"Malone Clark\",\r\n  \"email\": \"maloneclark@renovize.com\",\r\n  \"phone\": \"+1 (818) 565-2557\"\r\n},\r\n{\r\n  \"_id\": \"5a566402abb3146207bc4ec5\", \r\n  \"name\": \"Floyd Rutledge\",\r\n  \"email\": \"floydrutledge@renovize.com\",\r\n  \"phone\": \"+1 (807) 597-3629\"\r\n},\r\n{\r\n  \"_id\": \"5a56640298500fead8cb1ee5\", \r\n  \"name\": \"Grace James\",\r\n  \"email\": \"gracejames@renovize.com\",\r\n  \"phone\": \"+1 (959) 525-2529\"\r\n},\r\n{\r\n  \"_id\": \"5a56640243427b8f8445231e\", \r\n  \"name\": \"Tanner Gates\",\r\n  \"email\": \"tannergates@renovize.com\",\r\n  \"phone\": \"+1 (978) 591-2291\"\r\n},\r\n{\r\n  \"_id\": \"5a5664025c3abdad6f5e098c\", \r\n  \"name\": \"Lilly Conner\",\r\n  \"email\": \"lillyconner@renovize.com\",\r\n  \"phone\": \"+1 (842) 587-3812\"\r\n}]","import { Injectable } from '@angular/core';\r\n\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport default class StorageServiceService {\r\n\r\n  constructor() { }\r\n\r\n  public saveToStorage(key: string, value: Object) {\r\n    var str = JSON.stringify(value);\r\n    localStorage.setItem(key, str);\r\n  }\r\n\r\n  public load(key: string) {\r\n    var str = localStorage[key] || 'null';\r\n    return JSON.parse(str);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport storageService from '../storage-service/storage-service.service'\r\nimport UserModel from '../../models/user.model'\r\nimport ContactModel from '../../models/contact.model'\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport utilsService from '../utils-service/utils-sercice.service'\r\n@Injectable(\r\n  { providedIn: 'root' }\r\n)\r\nexport class UserService {\r\n\r\n  //mock the server - make it a private variable\r\n  private _user: UserModel\r\n\r\n  //private behaviorSubject array of contacts:\r\n  private _user$ = new BehaviorSubject<UserModel>(null)\r\n\r\n  //public observable of the privat var above\r\n  public user$ = this._user$.asObservable()\r\n\r\n  constructor(private storageService: storageService, private utilsService: utilsService) { }\r\n\r\n  public signup(userName: string) {\r\n    //this method gets a string representing a userName\r\n    //the method will check if there is a user in the local storage\r\n    //if there is a user in the local storage - return it\r\n    //otherwise - set a new user with 100 coins and the userName which was entered and return it \r\n    let user = this.storageService.load('bitcoin-user')\r\n    if (!user || user.name !== userName) {\r\n      user = {}\r\n      user.name = userName;\r\n      user.coins = 100;\r\n      user.moves = []\r\n      this.storageService.saveToStorage('bitcoin-user', user)\r\n    }\r\n    this._user = user\r\n    let sortedMoves = [...this._user.moves]\r\n    sortedMoves = this.sortMoves(sortedMoves)\r\n    this._user.moves = sortedMoves\r\n    this._user$.next(this._user)\r\n  }\r\n\r\n  public addMove(contact: ContactModel, amount: number) {\r\n    //moves an amount of coins from the current user to the given contact\r\n    const newTransaction = {\r\n      toId: contact._id,\r\n      to: contact.name,\r\n      at: Date.now(),\r\n      amount\r\n    }\r\n    if (this._user.coins - amount >= 0 && amount !== 0) {\r\n      this._user.coins -= amount\r\n      this._user.moves.push(newTransaction)\r\n      let sortedMoves = [...this._user.moves]\r\n      sortedMoves = this.sortMoves(sortedMoves)\r\n      this._user.moves = sortedMoves\r\n      this.storageService.saveToStorage('bitcoin-user', this._user)\r\n      this._user$.next(this._user)\r\n    }\r\n  }\r\n\r\n  public isAuthenticated() {\r\n    const user = this._user$.getValue()\r\n    return (user) ? true : false;\r\n  }\r\n\r\n  private sortMoves(moves) {\r\n    return moves.sort((move1, move2) => {\r\n      if (move1.at < move2.at) return 1\r\n      else if (move1.at > move2.at) return -1\r\n      else return 0;\r\n    })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport default class UtilsSerciceService {\r\n\r\n  constructor() { }\r\n\r\n  public _makeId?(length = 10) {\r\n    let txt = ''\r\n    const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (let i = 0; i < length; i++) {\r\n      txt += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return txt\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}